
start-at-login = true

# Path to the sketchybar executableta
# after-startup-command = ['exec-and-forget sketchybar', 'move-workspace-to-monitor --workspace W 3', 'move-workspace-to-monitor --workspace M 3']
exec-on-workspace-change =  ['/bin/bash', '-c', 'sketchybar --trigger aerospace_workspace_change FOCUSED=$AEROSPACE_FOCUSED_WORKSPACE PREVIOUSLY_FOCUSED=$AEROSPACE_PREV_WORKSPACE']

on-focus-changed = 'exec-and-forget /bin/bash -c "sketchybar --trigger aerospace_focus_change"'

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = false

#default-root-container-layout = 'accordion'
default-root-container-orientation = 'auto'
automatically-unhide-macos-hidden-apps = true

[gaps]
    inner.horizontal = 20
    inner.vertical =   20
    outer.left =       20
    outer.bottom =     60
    outer.top =        20
    outer.right =      20

[key-mapping]
    preset = 'qwerty'

[key-mapping.key-notation-to-key-code]
    '&' = '1'
    'é' = '2'
    '"' = '3'
    "'" = '4'
    '(' = '5'
    '§' = '6'
    'è' = '7'
    '!' = '8'
    'ç' = '9'
    'à' = '0'
    
    a = 'q'
    z = 'w'
    e = 'e'
    r = 'r'
    t = 't'
    y = 'y'
    u = 'u'
    i = 'i'
    o = 'o'
    p = 'p'
    '^' = 'leftSquareBracket'
    'dollar' = 'rightSquareBracket'
    'back' = 'backspace'

    q = 'a'
    s = 's'
    d = 'd'
    f = 'f'
    g = 'g'
    h = 'h'
    j = 'j'
    k = 'k'
    l = 'l'
    m = 'semicolon'
    'ù' = 'quote'

    w = 'z'
    x = 'x'
    c = 'c'
    v = 'v'
    b = 'b'
    n = 'n'
    comma = 'm'
    semicolon = 'comma'
    colon = 'period'
    '=' = 'slash'
    "minus" = 'equal'
    'closingPar' = 'minus'


# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding] 

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

 # All possible commands: https://nikitabobko.github.io/AeroSpace/command
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # See: https://nikitabobko.github.io/AeroSx@pace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # end tell'a
    # '''


    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    ctrl-cmd-alt-up = 'focus --boundaries workspace --boundaries-action wrap-around-the-workspace up'
    ctrl-cmd-alt-down ='focus --boundaries workspace --boundaries-action wrap-around-the-workspace down'
    ctrl-cmd-alt-left = 'focus --boundaries workspace --boundaries-action wrap-around-the-workspace left'
    ctrl-cmd-alt-right = 'focus --boundaries workspace --boundaries-action wrap-around-the-workspace right'
    ctrl-cmd-alt-back = 'workspace F'
    cmd-alt-ctrl-shift-left = 'move left'
    cmd-alt-ctrl-shift-down = 'move down'
    cmd-alt-ctrl-shift-up = 'move up'
    cmd-alt-ctrl-shift-right = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    ctrl-cmd-alt-minus = 'resize smart +25' # Hyper keyc=d
    ctrl-cmd-alt-closingPar = 'resize smart -25' # Hyper keyc=d
    ctrl-cmd-alt-shift-minus = 'resize smart +75' # Hyper keyc=d
    ctrl-cmd-alt-shift-closingPar = 'resize smart -75' # Hyper keyc=d
    ctrl-cmd-alt-0 = 'balance-sizes'
 #alt-equal = 'resize smart +50'

    # See: htDtps://nikitabobko.github.io/AeroSpace/commands@#
    ctrl-cmd-alt-f = 'workspace F' # FF
    ctrl-cmd-alt-d = 'workspace D' # Dev
    ctrl-cmd-alt-m = 'workspace M' # Monitoring
    ctrl-cmd-alt-s = 'workspace S' # Spotify
    ctrl-cmd-alt-t = 'workspace T' # Terminal
    ctrl-cmd-alt-v = 'workspace V' # Videos
    ctrl-cmd-alt-w = 'workspace W' # Work/Files
    ctrl-cmd-alt-x = 'workspace AI' # AI
    ctrl-cmd-alt-dollar = ['focus-back-and-forth'] # Focus back and forth
    
    ctrl-cmd-alt-1 = 'focus-monitor 1'
    ctrl-cmd-alt-2 = 'focus-monitor 2'
    ctrl-cmd-alt-3 = 'focus-monitor 3'

    ctrl-cmd-alt-shift-1 = 'move-node-to-monitor --focus-follows-window 1'
    ctrl-cmd-alt-shift-2 = 'move-node-to-monitor --focus-follows-window 2'
    ctrl-cmd-alt-shift-3 = 'move-node-to-monitor --focus-follows-window 3'
    ctrl-cmd-alt-shift-a = ['move-workspace-to-monitor 1', 'exec-and-forget /bin/bash -c "sketchybar --trigger workspace_changed_monitor"']
    ctrl-cmd-alt-shift-z = ['move-workspace-to-monitor 2', 'exec-and-forget /bin/bash -c "sketchybar --trigger workspace_changed_monitor"']
    ctrl-cmd-alt-shift-e = ['move-workspace-to-monitor 3', 'exec-and-forget /bin/bash -c "sketchybar --trigger workspace_changed_monitor"']

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    ctrl-cmd-alt-shift-s = 'move-node-to-workspace --focus-follows-window S' # Browser
    ctrl-cmd-alt-shift-f = 'move-node-to-workspace --focus-follows-window F' # Cursor
    ctrl-cmd-alt-shift-d = 'move-node-to-workspace --focus-follows-window D' # Dashboard
    ctrl-cmd-alt-shift-t = 'move-node-to-workspace --focus-follows-window T' # Spotify
    ctrl-cmd-alt-shift-m = 'move-node-to-workspace --focus-follows-window M' # File explorer
    ctrl-cmd-alt-shift-v = 'move-node-to-workspace --focus-follows-window V' # File explorer
    ctrl-cmd-alt-shift-w = 'move-node-to-workspace --focus-follows-window W' # Work/Files
    ctrl-cmd-alt-shift-x = 'move-node-to-workspace --focus-follows-window AI' # AI

    # Hyper key bindings for moving windows between monitors  
    #cmd-alt-ctrl-shift-right = 'move-node-to-monitor --focus-follows-window next'
    #cmd-alt-ctrl-shift-left = 'move-node-to-monitor --focus-follows-window prev'
    #cmd-alt-ctrl-shift-up = ['move-workspace-to-monitor next', 'exec-and-forget /bin/bash -c "sketchybar --trigger workspace_changed_monitor"']
    #cmd-alt-ctrl-shift-down = ['move-workspace-to-monitor prev', 'exec-and-forget /bin/bash -c "sketchybar --trigger workspace_changed_monitor"']  



    # Hyper key bindings for moving workspaces around monitors
    # cmd-alt-ctrl-shift-left = 'move-workspace-to-monitor --wrap-around prev'
    # cmd-alt-ctrl-shift-right = 'move-workspace-to-monitor --wrap-around next'
    # cmd-alt-ctrl-shift-right = 'move-workspace-to-monitor --wrap-around next'
    # cmd-alt-ctrl-shift-up = 'move-workspace-to-monitor --wrap-around up'
    # cmd-alt-ctrl-shift-down = 'move-workspace-to-monitor --wrap-around down'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    #alt-tab = 'workspace-back-and-forth' 
    # See: https://nikitabobko.github.io/AeroSpace/commandjjjkks#move-workspace-to-monitorBB
    #    alt-tab = 'move-workspace-to-monitor --wrap-around next'
    #    alt-shift-tab = 'move-workspace-to-monitor --wrap-around prev'                                                          
    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-esc = 'mode service'
    alt-cmd-ctrl-space = 'layout h_tiles h_accordion'
    alt-cmd-ctrl-shift-space = 'layout v_tiles v_accordion'

    cmd-m = []  




# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    shift-esc = ['close-all-windows-but-current', 'mode main']




[[on-window-detected]]
    if.window-title-regex-substring = 'hotkey'
    check-further-callbacks = false
    run = ['layout floating']  # The callback itself


# [[on-window-detected]]
#     if.app-id = "com.apple.Terminal"
#     run = "move-node-to-workspace T"

# [[on-window-detected]]
#     if.app-id = "com.googlecode.iterm2"
#     run = "move-node-to-workspace T"

[[on-window-detected]]
    if.app-id = "com.microsoft.VSCode"
    run = "move-node-to-workspace D"

[[on-window-detected]]
    if.app-id = "com.todesktop.230313mzl4w4u92"
    run = "move-node-to-workspace D"

[[on-window-detected]]
    if.app-id = "org.mozilla.firefox"
    run = "move-node-to-workspace F"

[[on-window-detected]]
    if.app-id = "org.mozilla.nightly"
    run = "move-node-to-workspace F"
    
[[on-window-detected]]
    if.app-id = "com.spotify.client"
    run = "move-node-to-workspace S"

# AI Chat Applications - Float into workspace X
[[on-window-detected]]
    if.app-id = "com.openai.chat"
    run = ["move-node-to-workspace AI"]

[[on-window-detected]]
    if.app-id = "com.anthropic.claudefordesktop"
    run = ["move-node-to-workspace AI"]

[[on-window-detected]]
    if.app-id = "ai.perplexity.app"
    run = ["move-node-to-workspace AI"]

[[on-window-detected]]
    if.app-id = "caom.grayjay.desktop"
    run = "move-node-to-workspace V"

[[on-window-detected]]
    if.app-id = "io.freetubeapp.freetube"
    run = "move-node-to-workspace V"


[[on-window-detected]]
    if.app-id = "com.todoist.mac.Todoist"
    run = "move-node-to-workspace M"

[[on-window-detected]]
    if.app-id = "io.capacities.app"
    run = "move-node-to-workspace M"

[[on-window-detected]]
    if.app-id = "com.readdle.SparkDesktop.appstore"
    run = "move-node-to-workspace M"

[[on-window-detected]]
    if.app-id = "com.jinghaoshe.qspace.pro"
    run = "move-node-to-workspace W"

[[on-window-detected]]
    if.app-id = "com.apple.finder"
    run = "move-node-to-workspace W"

[[on-window-detected]]
    if.app-id = "com.apple.ActivityMonitor"
    run = "move-node-to-workspace W"


[workspace-to-monitor-force-assignment]
    'S' = 3
    'AI' = 2
    'V' = 1
